<%- include('partials/header', {title: data.title, image: data.src, favicon: data.src}) %>
<% if (data.title) { %>
  <div class="page-title-box">
    <h1 class="page-title"><%= data.title %></h1>
  </div>
<% } %>
<main id="maincontent" class="single-layout">
    <%- include('partials/gridItem.ejs', {key: ``, flag: data}); %>
    <div class="single-sidebar">

      <div class="srp-box code">
        <header class="srp-box-header">
          <div class="text">SVG code</div>
          <a class="side link" href="<%= data.src %>">> SVG file</a>
        </header>
        <pre class="srp-box-content pre"><code><%= include(data.src) %></code></pre>
      </div>

    <div class="srp-box">
      <header class="srp-box-header"><div class="text">Specs</div></header>
      <div class="srp-box-content">
        <ul>
          <% if(data.ratios && data.ratios.length) { %>
            <li><span class="spec-title">ratio</span><span class="spec-value"><%- data.ratios.join(',') %></span></li>
          <% } %>
          <li><span class="spec-title">colors</span><span class="spec-value">
            <ul class="colors">
              <% data.colors.forEach(color => { %>
                <li>
                  <div class="color" style="border-color: <%= color %>;">
                    <a href="/?colors=<%= color %>" class="color-swatch" style="background-color: <%= color %>;"></a>
                    <div class="color-label"><%= color %></div>
                  </div>
                </li>
              <% }) %>
            </ul>
          </span></li>
          <% if(data.sources && data.sources.length) { %>
            <li><span class="spec-title">sources</span><span class="spec-value">
              <ul>
                <% data.sources.forEach((source, index) => { %>
                  <% if(index) {%>,<% } %>
                  <li>
                    <a class="link" href="<%= source %>" target="_blank" rel="noopener noreferrer"><%= source %></a>
                  </li>
                <% }) %>
              </ul>
            </span></li>
          <% } %>
        </ul>
      </div>
    </div>
    <% if(data.note) { %>
      <div class="srp-box">
        <header class="srp-box-header"><div class="text">Note</div></header>
        <div class="srp-box-content">
          <p><%= data.note %></p>
        </div>
      </div>
    <% } %>
    <% if(data.trivia) { %>
      <div class="srp-box">
        <header class="srp-box-header"><div class="text">Trivia</div></header>
        <div class="srp-box-content">
          <p><%= data.trivia %></p>
        </div>
      </div>
    <% } %>
  </div>
</main>
<script>
  // get colorAccents
  const colorAccents = <%- JSON.stringify(data.colorAccents) %>
  if(colorAccents && colorAccents.length) {
    document.documentElement.style.setProperty('--color1', colorAccents[0]);
    colorAccents.forEach((color, i) => {
      if(!i) return
      setTimeout(() => {
        console.log('color: ', color)
        document.documentElement.style.setProperty('--color1', color);
      }, 4000 * i)
    })
  }

  // animate SVG
  const svgContainer = document.querySelector('.flag-svg')
  if(svgContainer) {

    svgContainer.style.backgroundColor = '#ddd'
    const emblemGroups = svgContainer.querySelectorAll('.srp-emblem')
    let circles = svgContainer.querySelectorAll('circle')
    let paths = svgContainer.querySelectorAll('path')
    
    paths = Array.from(paths).filter(path => !path.closest('.srp-emblem'))
    
    paths.forEach(path => {
      const rect = path.getBoundingClientRect()
      const isLandscape = rect.width > rect.height
      const scale = isLandscape ? 'scaleX(0)' : 'scaleY(0)' 
      path.style.opacity = 0
      path.style.transform = scale
    })

    circles.forEach(item => {
      item.style.opacity = 0
      item.style.transform = 'scale(0)'
    })

    emblemGroups.forEach(item => {
      item.style.opacity = 0
    })

    setTimeout(() => {
      svgContainer.classList.add('js-animate')
    }, 10);
    
    let index = 0
    let eachDelay = 150
    
    paths.forEach((path, i) => {
      index = i + 1
      eachDelay -= eachDelay * .04
      setTimeout(() => {
        path.style.opacity = 1
        path.style.transform = 'scale(1)'

      }, eachDelay * index);
    })
    
    circles.forEach(item => {
      index++
      eachDelay -= eachDelay * .04
      setTimeout(() => {
        item.style.opacity = 1
        item.style.transform = 'scale(1)'


      }, eachDelay * index);
    })

    emblemGroups.forEach(item => {
      index++
      eachDelay -= eachDelay * .04
      setTimeout(() => {
        item.style.opacity = 1
      }, each * index);
    })
  }

  setTimeout(() => {
    document.documentElement.classList.add('js-ready')
  }, 10);
</script>
<%- include('partials/footer') %>